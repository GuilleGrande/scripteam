{
  "name": "Character Voice Generation",
  "nodes": [
    {
      "parameters": {
        "path": "generate-character-voice",
        "httpMethod": "POST",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "voice-gen-trigger",
      "name": "Voice Generation Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "voice-generation-webhook"
    },
    {
      "parameters": {
        "operation": "get",
        "key": "=voice:{{ $json.scriptId }}:{{ $json.characterName }}"
      },
      "id": "check-voice-cache",
      "name": "Check Voice Cache",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "cache-exists",
              "leftValue": "={{ $json.value }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "cache-decision",
      "name": "Voice Cached?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 300]
    },
    {
      "parameters": {
        "url": "http://api:3001/webhooks/voice-ready",
        "method": "POST",
        "body": "json",
        "jsonBody": "={\n  \"scriptId\": \"{{ $('voice-gen-trigger').first().json.scriptId }}\",\n  \"characterName\": \"{{ $('voice-gen-trigger').first().json.characterName }}\",\n  \"source\": \"cache\",\n  \"voiceData\": {{ $json.value }}\n}",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "id": "return-cached-voice",
      "name": "Return Cached Voice",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 120]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": "gpt-4",
        "messages": [
          {
            "role": "system",
            "content": "You are a voice direction expert for character voice synthesis. Analyze the character's dialogue and personality to determine voice parameters. Return ONLY valid JSON in this exact format:\n{\n  \"age\": number,\n  \"gender\": \"male|female|neutral\",\n  \"personality\": [\"trait1\", \"trait2\", \"trait3\"],\n  \"emotionalTone\": \"calm|dramatic|energetic|sad|happy|angry|neutral\",\n  \"voiceStyle\": \"authoritative|gentle|playful|serious|mysterious\",\n  \"pacePreference\": \"slow|normal|fast\",\n  \"voiceDescription\": \"brief description for voice selection\"\n}\n\nBe specific and consistent in your analysis."
          },
          {
            "role": "user",
            "content": "Character Name: {{ $('voice-gen-trigger').first().json.characterName }}\n\nCharacter Dialogue Sample:\n{{ $('voice-gen-trigger').first().json.characterDialogue }}\n\nScript Context:\n{{ $('voice-gen-trigger').first().json.scriptContext || 'No additional context provided' }}"
          }
        ],
        "temperature": 0.2,
        "maxTokens": 800
      },
      "id": "analyze-character-traits",
      "name": "Analyze Character",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "// Advanced voice selection logic based on character analysis\ntry {\n  const analysis = JSON.parse($input.first().json.message.content);\n  const characterName = $('voice-gen-trigger').first().json.characterName;\n  \n  // ElevenLabs voice ID mapping based on character traits\n  const voiceMap = {\n    // Young voices\n    'young_female_gentle': 'EXAVITQu4vr4xnSDxMaL', // Bella\n    'young_female_dramatic': 'MF3mGyEYCl7XYWbV9V6O', // Elli\n    'young_male_calm': '21m00Tcm4TlvDq8ikWAM', // Josh\n    'young_male_energetic': 'VR6AewLTigWG4xSOukaG', // Arnold\n    \n    // Middle-aged voices\n    'middle_female_authoritative': 'oWAxZDx7w5VEj9dCyTzz', // Grace\n    'middle_male_serious': 'VR6AewLTigWG4xSOukaG', // Arnold\n    \n    // Older voices\n    'older_female_wise': 'MF3mGyEYCl7XYWbV9V6O', // Elli (adjusted settings)\n    'older_male_authoritative': 'VR6AewLTigWG4xSOukaG', // Arnold (adjusted settings)\n    \n    // Default fallbacks\n    'default_female': 'EXAVITQu4vr4xnSDxMaL',\n    'default_male': '21m00Tcm4TlvDq8ikWAM'\n  };\n  \n  // Determine age category\n  let ageCategory = 'middle';\n  if (analysis.age < 25) ageCategory = 'young';\n  else if (analysis.age > 50) ageCategory = 'older';\n  \n  // Determine voice style based on personality and emotional tone\n  let styleModifier = 'calm';\n  if (analysis.personality.includes('dramatic') || analysis.emotionalTone === 'dramatic') {\n    styleModifier = 'dramatic';\n  } else if (analysis.personality.includes('energetic') || analysis.emotionalTone === 'energetic') {\n    styleModifier = 'energetic';\n  } else if (analysis.voiceStyle === 'authoritative') {\n    styleModifier = 'authoritative';\n  } else if (analysis.voiceStyle === 'gentle') {\n    styleModifier = 'gentle';\n  } else if (analysis.voiceStyle === 'serious') {\n    styleModifier = 'serious';\n  }\n  \n  // Construct voice key\n  const voiceKey = `${ageCategory}_${analysis.gender}_${styleModifier}`;\n  const fallbackKey = `default_${analysis.gender}`;\n  \n  // Select voice ID\n  const voiceId = voiceMap[voiceKey] || voiceMap[fallbackKey] || voiceMap['default_male'];\n  \n  // Calculate voice settings based on character analysis\n  const voiceSettings = {\n    stability: calculateStability(analysis),\n    similarity_boost: 0.75, // Standard setting\n    style: calculateStyle(analysis),\n    use_speaker_boost: true\n  };\n  \n  function calculateStability(analysis) {\n    if (analysis.personality.includes('calm') || analysis.voiceStyle === 'authoritative') {\n      return 0.8;\n    } else if (analysis.personality.includes('nervous') || analysis.emotionalTone === 'energetic') {\n      return 0.3;\n    } else if (analysis.personality.includes('dramatic')) {\n      return 0.5;\n    }\n    return 0.6; // Default\n  }\n  \n  function calculateStyle(analysis) {\n    if (analysis.emotionalTone === 'dramatic' || analysis.voiceStyle === 'dramatic') {\n      return 0.8;\n    } else if (analysis.voiceStyle === 'gentle' || analysis.emotionalTone === 'calm') {\n      return 0.2;\n    } else if (analysis.personality.includes('playful')) {\n      return 0.6;\n    }\n    return 0.4; // Default\n  }\n  \n  return [{\n    json: {\n      characterName: characterName,\n      voiceId: voiceId,\n      voiceKey: voiceKey,\n      analysis: analysis,\n      voiceSettings: voiceSettings,\n      sampleText: $('voice-gen-trigger').first().json.sampleText || \n                  `Hello, I am ${characterName}. This is my voice for the practice session.`\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in voice selection:', error);\n  return [{\n    json: {\n      error: 'Voice selection failed',\n      characterName: $('voice-gen-trigger').first().json.characterName,\n      voiceId: '21m00Tcm4TlvDq8ikWAM', // Default fallback\n      voiceSettings: {\n        stability: 0.6,\n        similarity_boost: 0.75,\n        style: 0.4\n      }\n    }\n  }];\n}"
      },
      "id": "select-elevenlabs-voice",
      "name": "Select Voice Profile",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "url": "=https://api.elevenlabs.io/v1/text-to-speech/{{ $json.voiceId }}",
        "method": "POST",
        "headers": {
          "xi-api-key": "={{ $credentials.elevenLabsApi.apiKey }}",
          "Content-Type": "application/json"
        },
        "body": "json",
        "jsonBody": "={\n  \"text\": \"{{ $json.sampleText }}\",\n  \"model_id\": \"eleven_flash_v2_5\",\n  \"voice_settings\": {{ JSON.stringify($json.voiceSettings) }}\n}",
        "options": {
          "responseFormat": "file",
          "timeout": 30000
        }
      },
      "id": "generate-sample-audio",
      "name": "Generate Voice Sample",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=voice:{{ $('voice-gen-trigger').first().json.scriptId }}:{{ $json.characterName }}",
        "value": "={{ JSON.stringify({ \n  voiceId: $json.voiceId, \n  voiceSettings: $json.voiceSettings, \n  analysis: $json.analysis, \n  voiceKey: $json.voiceKey,\n  generatedAt: new Date().toISOString(),\n  audioGenerated: true \n}) }}",
        "ttl": 604800
      },
      "id": "store-voice-profile",
      "name": "Store Voice Profile",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [1560, 300]
    },
    {
      "parameters": {
        "url": "http://api:3001/webhooks/voice-ready",
        "method": "POST",
        "body": "json",
        "jsonBody": "={\n  \"scriptId\": \"{{ $('voice-gen-trigger').first().json.scriptId }}\",\n  \"characterName\": \"{{ $json.characterName }}\",\n  \"source\": \"generated\",\n  \"voiceId\": \"{{ $json.voiceId }}\",\n  \"voiceSettings\": {{ JSON.stringify($json.voiceSettings) }},\n  \"analysis\": {{ JSON.stringify($json.analysis) }},\n  \"generatedAt\": \"{{ new Date().toISOString() }}\"\n}",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "id": "notify-voice-ready",
      "name": "Notify Voice Ready",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1780, 300]
    }
  ],
  "connections": {
    "voice-gen-trigger": {
      "main": [[
        {
          "node": "check-voice-cache",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "check-voice-cache": {
      "main": [[
        {
          "node": "cache-decision",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "cache-decision": {
      "main": [
        [
          {
            "node": "analyze-character-traits",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "return-cached-voice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "analyze-character-traits": {
      "main": [[
        {
          "node": "select-elevenlabs-voice",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "select-elevenlabs-voice": {
      "main": [[
        {
          "node": "generate-sample-audio",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "generate-sample-audio": {
      "main": [[
        {
          "node": "store-voice-profile",
          "type": "main",
          "index": 0
        }
      ]]
    },
    "store-voice-profile": {
      "main": [[
        {
          "node": "notify-voice-ready",
          "type": "main",
          "index": 0
        }
      ]]
    }
  },
  "createdAt": "2025-09-26T00:00:00.000Z",
  "id": "character-voice-generation",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "tags": [
    {
      "createdAt": "2025-09-26T00:00:00.000Z",
      "id": "voice-synthesis",
      "name": "Voice Synthesis",
      "updatedAt": "2025-09-26T00:00:00.000Z"
    }
  ],
  "updatedAt": "2025-09-26T00:00:00.000Z",
  "versionId": "1"
}